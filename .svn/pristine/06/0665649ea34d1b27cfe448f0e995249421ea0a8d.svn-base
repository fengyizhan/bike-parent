package com.tiamaes.bike.common.bean.information;

import java.io.IOException;
import java.io.Serializable;
import java.util.Date;

import org.apache.commons.lang.StringUtils;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 终端信息
 * 
 * @author Chen
 */
@ApiModel(value = "Terminal", description = "终端信息")
public class Terminal implements Serializable {
	private static final long serialVersionUID = 7970849760499235301L;
	@ApiModelProperty(value="主键(入库必需)")
	private String id;
	@ApiModelProperty(value="设备编号(入库必需)")
	private String name;
	@ApiModelProperty(value="SIM号卡")
	private String simNo;
	@ApiModelProperty(value="终端类型(入库必需)")
	private Type type;
	@ApiModelProperty(value="绑定车辆")
	private Vehicle vehicle;
	@ApiModelProperty(value="制造厂家(入库必需)")
	private Factory factory;
	@ApiModelProperty(value="备注")
	private String remark;
	@ApiModelProperty(value="注册时间(入库必需)")
	private Date createDate;
	@ApiModelProperty(value="是否绑定")
	private Boolean binded;
	@ApiModelProperty(value="鉴权码")
	private String authentication;
	@ApiModelProperty(value="软件版本号")
	private String softwareVersion;
	@ApiModelProperty(value="硬件版本号")
	private String hardwareVersion;
	@ApiModelProperty(value="协议版本号")
	private String protocolVersion;
	@ApiModelProperty(value="终端状态")
	@JsonDeserialize(using = State.Deserializer.class)
	private State state;
	@ApiModelProperty(value="是否已经注册")
	private Boolean registered = false;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSimNo() {
		return simNo;
	}

	public void setSimNo(String simNo) {
		this.simNo = simNo;
	}

	public Type getType() {
		return type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	public Vehicle getVehicle() {
		return vehicle;
	}

	public void setVehicle(Vehicle vehicle) {
		this.vehicle = vehicle;
	}

	public Factory getFactory() {
		return factory;
	}

	public void setFactory(Factory factory) {
		this.factory = factory;
	}

	public String getAuthentication() {
		return authentication;
	}

	public void setAuthentication(String authentication) {
		this.authentication = authentication;
	}

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public Date getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public Boolean getBinded() {
		return binded;
	}

	public void setBinded(Boolean binded) {
		this.binded = binded;
	}

	public String getSoftwareVersion() {
		return softwareVersion;
	}

	public void setSoftwareVersion(String softwareVersion) {
		this.softwareVersion = softwareVersion;
	}

	public String getHardwareVersion() {
		return hardwareVersion;
	}

	public void setHardwareVersion(String hardwareVersion) {
		this.hardwareVersion = hardwareVersion;
	}

	public String getProtocolVersion() {
		return protocolVersion;
	}

	public void setProtocolVersion(String protocolVersion) {
		this.protocolVersion = protocolVersion;
	}

	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}
	
	public Boolean getRegistered() {
		return registered;
	}

	public void setRegistered(Boolean registered) {
		this.registered = registered;
	}



	public static class Type {
		private String id;
		private String name;

		public String getId() {
			return id;
		}

		public void setId(String id) {
			this.id = id;
		}

		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}
	}

	public static class Factory {
		private String id;
		private String name;

		public String getId() {
			return id;
		}

		public void setId(String id) {
			this.id = id;
		}

		public String getName() {
			return name;
		}

		public void setName(String name) {
			this.name = name;
		}
	}

	@JsonFormat(shape = JsonFormat.Shape.OBJECT)
	public static enum State implements com.tiamaes.bike.common.Enum<State> {

		NORMAL("正常"), STOP("暂停"), BROKEN("已拆"), OFFLINE("脱网");

		private String name;

		private State(String name) {
			this.name = name;
		}

		@Override
		@JsonProperty("value")
		public String getValue() {
			return name();
		}

		@Override
		@JsonProperty("name")
		public String getName() {
			return this.name;
		}

		@Override
		@JsonProperty("index")
		public int getIndex() {
			return this.ordinal();
		}

		@JsonCreator
		public static State valueOf(@JsonProperty("index") final int index) {
			State[] types = State.values();
			if (index >= 0 && index < types.length) {
				return types[index];
			}
			return null;
		}

		public static class Deserializer extends JsonDeserializer<State> {
			@Override
			public State deserialize(JsonParser jp, DeserializationContext ctxt)
					throws IOException, JsonProcessingException {
				JsonToken currentToken = jp.getCurrentToken();
				switch (currentToken) {
				case VALUE_NUMBER_INT:
					return State.valueOf(jp.getIntValue());
				case VALUE_STRING:
					String text = jp.getText();
					if (StringUtils.isNotBlank(text)) {
						return State.valueOf(text.trim().toUpperCase());
					}
				case START_OBJECT:
					JsonNode jsonNode = ((JsonNode) jp.readValueAsTree()).get("value");
					if (jsonNode != null && jsonNode.isValueNode()) {
						text = jsonNode.asText();
						if (StringUtils.isNotBlank(text)) {
							return State.valueOf(text.trim().toUpperCase());
						}
					}
				default:
					break;
				}
				return null;
			}
		}
	}
}
