package com.tiamaes.bike.connector.protocol.message;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;

/**
 * 车辆控制消息
 * 
 * @author Chen
 */
public class Message8102 extends Message {

	private Body body;

	public Message8102(int id, Result result) {
		Header _header = new Header();
		_header.setId(0x8102);
		_header.setChildPackage(false);
		_header.setEnableRSA(false);
		_header.setTerminalId(id);

		Body _body = new Body();
		_body.setId(id);
		_body.setResult(result);
		this.setHeader(_header);
		this.setBody(_body);
		this.setBytes(_body.getBytes());
	}

	public Body getBody() {
		return body;
	}

	public void setBody(Body body) {
		this.body = body;
	}

	public class Body {
		private int id;
		private Result result;

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}

		public Result getResult() {
			return result;
		}

		public void setResult(Result result) {
			this.result = result;
		}

		public byte[] getBytes() {
			StringBuffer bufferStr = new StringBuffer();
			bufferStr.append(String.format("%02X", result.ordinal()));
			bufferStr.append(String.format("%04X", id));
			try {
				return Hex.decodeHex(bufferStr.toString().toCharArray());
			} catch (DecoderException e) {
				return null;
			}
		}
	}

	public enum Result {
		RETURNED, BORROWED;
	}
}
