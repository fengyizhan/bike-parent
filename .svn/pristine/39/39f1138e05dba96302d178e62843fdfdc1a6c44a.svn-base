package com.tiamaes.bike.api;

import static org.junit.Assert.assertNotNull;

import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.tiamaes.bike.api.information.command.service.CommandServiceInterface;
import com.tiamaes.bike.common.bean.connector.command.Command;
import com.tiamaes.bike.common.bean.connector.command.LineAddCommand;
import com.tiamaes.bike.common.bean.connector.command.PolygonAddCommand;
import com.tiamaes.bike.common.bean.connector.command.TextCommand;
import com.tiamaes.bike.common.utils.UUIDGenerator;

@RunWith(SpringRunner.class)
@SpringBootTest
public class CommandServiceTest {
	
	private static Logger logger = LogManager.getLogger(CommandServiceTest.class);
	
	@Autowired
	private CommandServiceInterface service;
	
	@Autowired
	@Qualifier("jacksonObjectMapper")
	private ObjectMapper jacksonObjectMapper;

	@Before
	public void before() {
		assertNotNull("Service not found...", service);
		assertNotNull("jacksonObjectMapper not found...", jacksonObjectMapper);
	}
	
	@Test
	public void sendCommandTest() throws Exception{
		TextCommand command = new TextCommand();
		command.setId(UUIDGenerator.getUUID());
		command.setSimNo("015800020022");
		command.setMessageInfo("测试消息发送！");
		service.sendCommand(command);
		
		logger.debug(command);
	}
	
	@Test
	public void sendCommandsTest() throws Exception{
		List<Command> commands = new ArrayList<Command>();
		LineAddCommand lineAddCommand = new LineAddCommand();
		lineAddCommand.setId(UUIDGenerator.getUUID());
		lineAddCommand.setSimNo("015800020022");
		lineAddCommand.setLineId(100);
		
		PolygonAddCommand polygonAddCommand = new PolygonAddCommand();
		polygonAddCommand.setId(UUIDGenerator.getUUID());
		polygonAddCommand.setSimNo("015800020022");
		polygonAddCommand.setMaxSpeed((short)100);
		
		commands.add(lineAddCommand);
		commands.add(polygonAddCommand);
		service.sendCommands(commands);
		logger.debug(commands);
	}
	
	@Test
	public void getListOfCommandBySimNo() throws Exception{
		String simNo = "015800020022";
		List<Command> commands= new ArrayList<Command>();
		commands = service.getListOfCommandBySimNo(simNo);
		logger.debug(commands);
	}
}
