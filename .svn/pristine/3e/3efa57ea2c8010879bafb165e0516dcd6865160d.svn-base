package com.tiamaes.bike.reporter.information.project.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang.time.DateFormatUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.data.redis.core.HashOperations;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.tiamaes.bike.common.RedisKey;
import com.tiamaes.bike.common.bean.homepage.OngoingProjectInfo;
import com.tiamaes.bike.common.bean.homepage.OngoingProjectTripInfo;
import com.tiamaes.bike.common.bean.information.Project;
import com.tiamaes.bike.reporter.information.project.service.ProjectServiceInterface;
import com.tiamaes.security.core.annotation.CurrentUser;
import com.tiamaes.security.core.userdetails.User;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/information/project")
@Api(tags = {"project"}, description = "首页渣土车工程记录")
public class ProjectController {
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(ProjectController.class);
	
	@Resource
	private ProjectServiceInterface projectService;
	
	@Resource(name = "jsonRedisTemplate")
	private HashOperations<String, String, Project> projectOperator;
	
	/**
	 * 获取渣土车工程信息以及正在进行的工程列表
	 * @param operator
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "/info", method = RequestMethod.GET)
	@ApiOperation(value = "渣土车工程信息以及正在进行的工程列表", notes = "获取渣土车工程信息以及正在进行的工程列表")
	public @ResponseBody Map<String,Object> partOfTheCarProjectInfo(@CurrentUser User operator) {
		Map<String, Object> projectMessage = projectService.getMessageOfProject(DateFormatUtils.format(new Date(), "yyyy-MM-dd"));
		int total = (int) projectMessage.get("total");
		Map<String, Integer> ongoing = (Map<String, Integer>) projectMessage.get("ongoing");
		List<OngoingProjectInfo> ongoingProjectInfos = projectService.getListOfOngoingProjectInfo(ongoing, operator);
		Map<String,Object> result = new HashMap<String, Object>();
		result.put("total", total);
		result.put("ongoingTotal", ongoing.size());
		result.put("ongoingList", ongoingProjectInfos);
		return result;
	}
	
	/**
	 * 根据id获取渣土车工程的详细信息
	 * @param id
	 * @param operator
	 * @return
	 */
	@RequestMapping(value = "/detail/{id}", method = RequestMethod.GET)
	@ApiOperation(value = "指定渣土车工程的详细信息", notes = "根据id获取渣土车工程的详细信息")
	public @ResponseBody Map<String,Object> partOfTheCarProjectDetail(@PathVariable("id")String id, @CurrentUser User operator) {
		Project project = projectService.getProjectById(id);
		List<OngoingProjectTripInfo> ongoingProjectInfoDetails = projectService.getListOfOngoingProjectInfoDetail(project);
		Map<String, Object> result = new HashMap<String, Object>();
		List<String> vehicleIds = new ArrayList<String>();
		for (OngoingProjectTripInfo ongoingProjectTripInfo : ongoingProjectInfoDetails) {
			vehicleIds.add(ongoingProjectTripInfo.getVehicleId());
		}
		result.put("projectInfo", project);
		result.put("projectTrip", ongoingProjectInfoDetails);
		result.put("vehicleIds", vehicleIds);
		return result;
	}
	
	/**
	 * 根据id获取渣土车工程的监控
	 * @param id
	 * @param operator
	 * @return
	 */
	@RequestMapping(value = "/monitor/{id}", method = RequestMethod.GET)
	@ApiOperation(value = "指定渣土车工程的监控", notes = "根据id获取渣土车工程的监控")
	public @ResponseBody Map<String,Object> partOfTheCarProjectMonitor(@PathVariable("id")String id, @CurrentUser User operator) {
		Project project = projectOperator.get(RedisKey.PROJECTS, id);
		Map<String, Object> result = new HashMap<String, Object>();
		result.put("project", project);
		return result;
	}
}
