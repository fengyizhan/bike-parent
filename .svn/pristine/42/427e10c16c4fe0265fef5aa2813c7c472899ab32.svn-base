package com.tiamaes.bike.connector.protocol.message;


import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.Unpooled;

/**
 * 车辆控制执行结果包
 * 
 * @author Chen
 */
public class Received0012 extends Received {
	
	private Body body;

	public Received0012(Header header, byte[] bytes) {
		super(header, bytes);
		
		CompositeByteBuf buffer = Unpooled.compositeBuffer();
		buffer.writeBytes(bytes);
		int type = buffer.readUnsignedByte();
		int terminalId = buffer.readInt();
		int result = buffer.readUnsignedByte();
		Body body = new Body();
		body.setType(Type.values()[type]);
		body.setTerminalId(terminalId);
		body.setResult(Result.values()[result]);
		this.body = body;
	}
	
	public Body getBody() {
		return body;
	}

	public void setBody(Body body) {
		this.body = body;
	}

	public class Body {
		/**
		 * 状态类型
		 */
		private Type type;
		/**
		 * 车锁编号
		 */
		private int terminalId;
		/**
		 * 执行结果
		 */
		private Result result;

		public int getTerminalId() {
			return terminalId;
		}

		public void setTerminalId(int terminalId) {
			this.terminalId = terminalId;
		}

		public Type getType() {
			return type;
		}

		public void setType(Type type) {
			this.type = type;
		}

		public Result getResult() {
			return result;
		}

		public void setResult(Result result) {
			this.result = result;
		}
	}

	public enum Type {
		OPENED, LOCKED;
	}

	public enum Result {
		SUCCESS, FAILURE;
	}
}
