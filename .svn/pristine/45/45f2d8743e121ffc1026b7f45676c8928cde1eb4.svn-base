package com.tiamaes.bike.connector;

import static org.junit.Assert.assertNotNull;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.tiamaes.bike.TestConstant;
import com.tiamaes.bike.common.bean.connector.command.PolygonAddCommand;
import com.tiamaes.bike.common.bean.message.Message8604;

/**
 * 设置多边形区域0x8604实体类测试
 * @author waibao001
 *
 */
@RunWith(SpringRunner.class)
@SpringBootTest
public class Message8604Test extends TestConstant {
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(Message8604Test.class);
	
	@Autowired
	@Qualifier("jacksonObjectMapper")
	private ObjectMapper jacksonObjectMapper;

	@Before
	public void before() {
		assertNotNull("Service not found...");
		assertNotNull("jacksonObjectMapper not found...", jacksonObjectMapper);
	}
	
	@Test
	public void message8604Test() throws Exception{
		SimpleDateFormat format = new SimpleDateFormat("YYYY/MM/dd hh:mm:ss");
		
		PolygonAddCommand polygon = new PolygonAddCommand();
		polygon.setRegionId(10000);
		polygon.setRegionAttr((short)1);
		polygon.setStartTime(new Date());
		polygon.setEndTime(format.parse("2018/10/25 19:05:01"));
		polygon.setMaxSpeed((short)100);
		polygon.setOverSpeedS((short)200);
		polygon.setVertexCount(50);
		List<PolygonAddCommand.VertexProperty> vertexPropertys = new ArrayList<PolygonAddCommand.VertexProperty>();
		
		PolygonAddCommand.VertexProperty vertexProperty = new PolygonAddCommand.VertexProperty();
		vertexProperty.setLat(34.842724);
		vertexProperty.setLng(113.514733);
		PolygonAddCommand.VertexProperty vertexProperty1 = new PolygonAddCommand.VertexProperty();
		vertexProperty1.setLat(34.841367);
		vertexProperty1.setLng(113.514035);
		PolygonAddCommand.VertexProperty vertexProperty2 = new PolygonAddCommand.VertexProperty();
		vertexProperty1.setLat(34.838606);
		vertexProperty1.setLng(113.51589);
		vertexPropertys.add(vertexProperty);
		vertexPropertys.add(vertexProperty1);
		vertexPropertys.add(vertexProperty2);
		polygon.setVertexPropertys(vertexPropertys);
		
		Message8604 message = new Message8604(simNo);
		
		message.setResponseBody(polygon);
		System.out.println(message.toString());
	}
}
