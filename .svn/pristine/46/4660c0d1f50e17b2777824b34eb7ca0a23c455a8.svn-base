package com.tiamaes.bike.reporter.integrated.vehicle.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.tiamaes.bike.common.RedisKey;
import com.tiamaes.bike.common.bean.Parameters;
import com.tiamaes.bike.common.bean.integrated.OnlineRecord;
import com.tiamaes.bike.reporter.integrated.vehicle.service.VehicleQueryServiceInterface;
import com.tiamaes.mybatis.PageInfo;
import com.tiamaes.mybatis.Pagination;
import com.tiamaes.security.core.annotation.CurrentUser;
import com.tiamaes.security.core.userdetails.User;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/integrated/vehicle")
@Api(tags = {"vehicleQuery"}, description = "车辆上下线记录查询")
public class VehicleQueryController {
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(VehicleQueryController.class);
	@Resource
	private VehicleQueryServiceInterface vehicleQueryService;
	@Resource
	private StringRedisTemplate stringRedisTemplate;
	
	@RequestMapping(value = {"/online/page/{number:\\d+}","/online/page/{number:\\d+}/{pageSize:\\d+}"}, method = { RequestMethod.GET, RequestMethod.POST }, produces = {"application/json" })
	@ApiOperation(value = "车辆上下线分页信息", notes = "获取当前页的车辆上下线列表数据")
	@ApiImplicitParam(name = "onlineRecord", value = "车辆上下线记录实体", required = true, dataType = "OnlineRecord")
	public @ResponseBody PageInfo<OnlineRecord> page(@RequestBody OnlineRecord onlineRecord, @PathVariable Map<String,String> pathVariable,@CurrentUser User operator) {
		int number = pathVariable.get("number") == null ? 1 : Integer.parseInt(pathVariable.get("number"));
		int pageSize = pathVariable.get("pageSize") == null ? 20 : Integer.parseInt(pathVariable.get("pageSize"));
		Pagination<OnlineRecord> pagination = new Pagination<OnlineRecord>(number, pageSize);
		//封装参数
		Parameters<OnlineRecord> parameters = new Parameters<OnlineRecord>();
		parameters.setUser(operator);
		parameters.setModel(onlineRecord);
		
		List<OnlineRecord> list = vehicleQueryService.getListOfOnlineRecords(parameters, pagination);
		return new PageInfo<>(list);
	}
	
	/**
	 * 从缓存中获取服务器的ip地址
	 * @param simNo
	 * @return
	 */
	@RequestMapping(value="server/{simNo}",method={RequestMethod.GET})
	@ApiOperation(value = "获取服务器ip地址", notes = "从缓存中获取服务器的ip地址")
	public @ResponseBody Map<String,Object> getServer(@PathVariable String simNo){
		Map<String,Object> result = new HashMap<String,Object>();
		String server = (String) stringRedisTemplate.opsForHash().get(RedisKey.CONNECTS, simNo);
		result.put("server", server);
		return result;
	}
	
}
