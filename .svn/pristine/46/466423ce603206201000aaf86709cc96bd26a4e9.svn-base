package com.tiamaes.bike.reporter.integrated.driver.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.tiamaes.bike.common.bean.Parameters;
import com.tiamaes.bike.common.bean.integrated.DriverCardRecord;
import com.tiamaes.bike.reporter.integrated.driver.service.DriverCardRecordServiceInterface;
import com.tiamaes.mybatis.PageInfo;
import com.tiamaes.mybatis.Pagination;
import com.tiamaes.security.core.annotation.CurrentUser;
import com.tiamaes.security.core.userdetails.User;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/integrated/driver")
@Api(tags = {"driverQuery"}, description = "司机插拔卡记录查询")
public class DriverQueryController {
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(DriverQueryController.class);
	@Resource
	private DriverCardRecordServiceInterface driverCardRecordService;
	
	@RequestMapping(value = {"/punchCard/page/{number:\\d+}","/punchCard/page/{number:\\d+}/{pageSize:\\d+}"}, method = { RequestMethod.GET, RequestMethod.POST }, produces = {"application/json" })
	@ApiOperation(value = "司机插拔卡记录分页信息", notes = "获取当前页的司机插拔卡列表数据")
	@ApiImplicitParam(name = "driverCardRecord", value = "司机插拔卡记录实体", required = true, dataType = "DriverCardRecord")
	public @ResponseBody PageInfo<DriverCardRecord> page(@RequestBody DriverCardRecord driverCardRecord, @PathVariable Map<String,String> pathVariable,@CurrentUser User operator) {
		int number = pathVariable.get("number") == null ? 1 : Integer.parseInt(pathVariable.get("number"));
		int pageSize = pathVariable.get("pageSize") == null ? 20 : Integer.parseInt(pathVariable.get("pageSize"));
		Pagination<DriverCardRecord> pagination = new Pagination<DriverCardRecord>(number, pageSize);
		//封装参数
		Parameters<DriverCardRecord> parameters = new Parameters<DriverCardRecord>();
		parameters.setUser(operator);
		parameters.setModel(driverCardRecord);

		List<DriverCardRecord> list = driverCardRecordService.getListOfDriverCardRecords(parameters, pagination);
		return new PageInfo<>(list);
	}
	
	@RequestMapping(value = "/init", method = RequestMethod.GET, produces = { "application/json" })
	public @ResponseBody Map<String,Object> init() {
		Map<String,Object> result = new HashMap<String,Object>();
//		result.put("driverCardRecordType", DriverCardRecord.DriverCardRecordType.values());
		return result;
	}
	
}
