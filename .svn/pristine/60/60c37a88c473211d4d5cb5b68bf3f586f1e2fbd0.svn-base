package com.tiamaes.bike.connector.protocol.handler;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.lang.StringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.tiamaes.bike.common.bean.information.Vehicle;
import com.tiamaes.bike.common.bean.message.Message;
import com.tiamaes.bike.common.bean.message.Message8001;
import com.tiamaes.bike.config.ChannelRepository;
import com.tiamaes.bike.connector.service.HandlerServiceInterface;

import io.netty.channel.Channel;
import io.netty.util.Attribute;
import io.netty.util.AttributeKey;

/**
 * 注销包0x0003
 * 
 * @author lsl
 *
 */
@Component
public class Protocol0003Handler extends ProtocolHandler {
	private static Logger logger = LogManager.getLogger(Protocol0003Handler.class);
	@Autowired
	private ChannelRepository channelRepository;
	
	@Autowired
	private HandlerServiceInterface handlerService;
	
	@Override
	public Message execute(Channel channel, Message request) throws DecoderException {
		String simNo = request.getHeader().getSimNo();
		boolean resultB = handlerService.logoutVehicle(simNo);
		int result = 1;
		if(resultB){
			//移除连接信息
			Attribute<Vehicle> attribute = channel.attr(AttributeKey.valueOf("target"));
			Vehicle target = attribute.get();
			if (target != null) {
				if (!StringUtils.isBlank(simNo)) {
					if (channelRepository.get(simNo) == null) {
						channelRepository.remove(simNo);
						String address = channel.remoteAddress().toString();
						logger.debug(String.format("Auto [%s] has canceled, the remote address is [%s].", simNo, address));
					}
				}
				attribute.remove();
			}
			result = 0;
		}
		
		Message8001 response = new Message8001(simNo);
		response.setResponseBody(request.getHeader(), result);
		return response;
	}

}
