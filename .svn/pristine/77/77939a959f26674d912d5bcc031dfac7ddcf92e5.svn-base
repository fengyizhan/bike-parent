package com.tiamaes.bike.storage.listener;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Component;

import com.tiamaes.bike.common.bean.connector.DriverSigninInfo;
import com.tiamaes.bike.common.bean.connector.RequestInfo;
import com.tiamaes.bike.common.bean.connector.ResponseInfo;
import com.tiamaes.bike.common.bean.connector.VehicleOnOffLineInfo;
import com.tiamaes.bike.common.bean.connector.VehiclePhotoInfo;
import com.tiamaes.bike.common.bean.connector.VehicleStationInfo;
import com.tiamaes.bike.common.bean.connector.VehicleWarningInfo;
import com.tiamaes.bike.common.bean.information.Vehicle;
import com.tiamaes.bike.storage.service.DriverSigninInfoServiceInterface;
import com.tiamaes.bike.storage.service.LocatioInfoServiceInterface;
import com.tiamaes.bike.storage.service.RequestInfoServiceInterface;
import com.tiamaes.bike.storage.service.ResponseInfoServiceInterface;
import com.tiamaes.bike.storage.service.VehicleOnOffLineInfoServiceInterface;
import com.tiamaes.bike.storage.service.VehiclePhotoInfoServiceInterface;
import com.tiamaes.bike.storage.service.VehicleStationInfoServiceInterface;

@Component
public class Listener {
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(Listener.class);

	@Autowired
	private LocatioInfoServiceInterface locatioInfoService;
	@Autowired
	private ResponseInfoServiceInterface responseInfoService;
	@Autowired
	private RequestInfoServiceInterface requestInfoService;
	@Autowired
	private DriverSigninInfoServiceInterface driverSigninInfoService;
	@Autowired
	private VehicleOnOffLineInfoServiceInterface vehicleOnOffLineInfoService;
	@Autowired
	private VehiclePhotoInfoServiceInterface vehiclePhotoInfoService;
	@Autowired
	private VehicleStationInfoServiceInterface vehicleStationInfoService;

	/**
	 * 消费车辆状态信息
	 * 
	 * @param vehicle
	 * @throws Exception
	 */
	@KafkaListener(id = "listen1", topics = "com.tiamaes.bike.common.bean.information.Vehicle")
	public void listen1(@Payload Vehicle vehicle) throws Exception {
		locatioInfoService.savePointVector(vehicle);
	}

	/**
	 * 消费车辆报警信息
	 * 
	 * @param warning
	 * @throws Exception
	 */
	@KafkaListener(id = "listen2", topics = "com.tiamaes.bike.common.bean.connector.VehicleWarningInfo")
	public void listen2(@Payload VehicleWarningInfo warning) throws Exception {
		locatioInfoService.saveVehicleWarningInfo(warning);
	}

	/**
	 * 消费响应报文信息
	 * 
	 * @param response
	 * @param topic
	 * @param key
	 * @param partition
	 * @throws Exception
	 */
	@KafkaListener(id = "listen3", topics = "com.tiamaes.bike.common.bean.connector.ResponseInfo")
	public void listen3(@Payload ResponseInfo response) throws Exception {
		responseInfoService.saveResponseInfo(response);
	}

	/**
	 * 消费请求报文信息
	 * 
	 * @param request
	 * @param topic
	 * @param key
	 * @param partition
	 * @throws Exception
	 */
	@KafkaListener(id = "listen4", topics = "com.tiamaes.bike.common.bean.connector.RequestInfo")
	public void listen4(@Payload RequestInfo request) throws Exception {
		requestInfoService.saveRequestInfo(request);
	}

	/**
	 * 消费司机插拔卡信息
	 * 
	 * @param driverSigninInfo
	 * @throws Exception
	 */
	@KafkaListener(id = "listen5", topicPattern = "com.tiamaes.bike.common.bean.connector.DriverSigninInfo")
	public void listen5(@Payload DriverSigninInfo driverSigninInfo) throws Exception {
		driverSigninInfoService.addDriverSigninInfo(driverSigninInfo);
	}

	/**
	 * 消费车辆上下线信息
	 * 
	 * @param vehicleOnOffLineInfo
	 * @throws Exception
	 */
	@KafkaListener(id = "listen6", topics = "com.tiamaes.bike.common.bean.connector.VehicleOnOffLineInfo")
	public void listen6(@Payload VehicleOnOffLineInfo vehicleOnOffLineInfo) throws Exception {
		vehicleOnOffLineInfoService.addVehicleOnOffLineInfo(vehicleOnOffLineInfo);
	}

	/**
	 * 消费设备拍照信息
	 * 
	 * @param vehiclePhotoInfo
	 * @throws Exception
	 */
	@KafkaListener(id = "listen7", topics = "com.tiamaes.bike.common.bean.connector.VehiclePhotoInfo")
	public void listen7(@Payload VehiclePhotoInfo vehiclePhotoInfo) throws Exception {
		vehiclePhotoInfoService.addVehiclePhotoInfo(vehiclePhotoInfo);
	}

	/**
	 * 消费车辆进出场信息
	 * 
	 * @param vehicleStationInfo
	 * @throws Exception
	 */
	@KafkaListener(id = "listen8", topics = "com.tiamaes.bike.common.bean.connector.VehicleStationInfo")
	public void listen8(@Payload VehicleStationInfo vehicleStationInfo) throws Exception {
		vehicleStationInfoService.addVehicleStationInfo(vehicleStationInfo);
		vehicleStationInfoService.addProjectTripInfo(vehicleStationInfo);
	}
}
