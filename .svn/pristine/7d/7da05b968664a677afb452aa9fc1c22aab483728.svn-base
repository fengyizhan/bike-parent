package com.tiamaes.bike.reporter;

import static org.junit.Assert.assertNotNull;

import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.tiamaes.bike.common.bean.Parameters;
import com.tiamaes.bike.common.bean.information.Region;
import com.tiamaes.bike.common.bean.information.Station;
import com.tiamaes.bike.common.bean.information.Vehicle;
import com.tiamaes.bike.common.bean.integrated.InoutRecord;
import com.tiamaes.bike.common.bean.integrated.StationRecord;
import com.tiamaes.bike.reporter.integrated.station.service.StationQueryServiceInterface;
import com.tiamaes.mybatis.Pagination;
import com.tiamaes.security.core.userdetails.User;

@RunWith(SpringRunner.class)
@SpringBootTest
public class StationQueryServiceTest {

	private static Logger logger = LogManager.getLogger(StationQueryServiceTest.class);
	
	@Autowired
	private StationQueryServiceInterface service;
	
	@Autowired
	@Qualifier("jacksonObjectMapper")
	private ObjectMapper jacksonObjectMapper;

	@Before
	public void before() {
		assertNotNull("Service not found...", service);
		assertNotNull("jacksonObjectMapper not found...", jacksonObjectMapper);
	}
	
	@Test
	public void getListOfStationRecords() throws Exception {
		int number = 1;
		StationRecord stationRecord = new StationRecord();
		Parameters<StationRecord> parameters = new Parameters<StationRecord>();
		User user = AlarmQueryServiceTest.setUser();
//		user.setId("849aa67d60aa438a83e7024f1ec2d93f");
		parameters.setUser(user);
		parameters.setModel(stationRecord);
		int total = service.getTotalOfStationRecords(parameters);
		Pagination<StationRecord> pagination = new Pagination<StationRecord>(number, total);
		List<StationRecord> stationRecords = service.getListOfStationRecords(parameters, pagination);
		Assert.assertNotNull(stationRecords);
		logger.debug(jacksonObjectMapper.writeValueAsString(stationRecords));
	}
	
	@Test
	public void getListOfInoutRecords() throws Exception {
		String vehicleId = "d196b09f835842d79c993d961d94849f";
		List<InoutRecord> inoutRecords = service.getListOfInoutRecords(vehicleId);
		Assert.assertNotNull(inoutRecords);
		logger.debug(jacksonObjectMapper.writeValueAsString(inoutRecords));
	}
	
	@Test
	public void getListOfInOutInfo() throws Exception {
		Vehicle.Property property = new Vehicle.Property();
		Region region = new Region();
		region.setId("440303");
//		property.setRegion(region);
		Vehicle vehicle = new Vehicle();
		vehicle.setProperty(property);
		Station station = new Station();
		station.setId(2);
//		station.setType(Type.PRODUCER);
		StationRecord stationRecord = new StationRecord(vehicle, null, station);
		Date now = new Date();
		Date before = new Date();
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);
		calendar.add(Calendar.MONTH, -2);
		before = calendar.getTime();
		stationRecord.setStartTime(before);
		List<StationRecord> stationRecords = service.getListOfInOutInfo(stationRecord);
		logger.debug(jacksonObjectMapper.writeValueAsString(stationRecords));
	}
}
