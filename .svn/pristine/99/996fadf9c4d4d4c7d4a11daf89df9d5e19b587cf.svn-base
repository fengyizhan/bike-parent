package com.tiamaes.bike.reporter.integrated.trips.service;

import java.util.List;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;

import com.tiamaes.bike.common.bean.Parameters;
import com.tiamaes.bike.common.bean.integrated.TripRecord;
import com.tiamaes.bike.reporter.integrated.trips.persistence.TripsQueryMapper;
import com.tiamaes.mybatis.PageHelper;
import com.tiamaes.mybatis.Pagination;

@Service
@Transactional(propagation = Propagation.NOT_SUPPORTED)
@SuppressWarnings("rawtypes") 
public class TripsQueryService implements TripsQueryServiceInterface {
	
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(TripsQueryService.class);
	
	@Resource
	private TripsQueryMapper tripsQueryMapper;

	@Override
	@Transactional(propagation = Propagation.NOT_SUPPORTED)
	public List<TripRecord> getListOfTripRecords(Parameters<TripRecord> parameters, Pagination<TripRecord> pagination) {
		Assert.notNull(pagination, "分页对象不能为空");
		PageHelper.startPage(pagination);
		List<TripRecord> list = tripsQueryMapper.getListOfTripRecords(parameters);
		return list;
	}

	@Override
	@Transactional(propagation = Propagation.NOT_SUPPORTED)
	public int getTotalOfTripRecords(Parameters<TripRecord> parameters) {
		return tripsQueryMapper.getTotalOfTripRecords(parameters);
	}

	@Override
	@Transactional(propagation = Propagation.NOT_SUPPORTED)
	public TripRecord getTotalByTime(Parameters parameters) {
		return tripsQueryMapper.getTotalByTime(parameters);
	}
}
