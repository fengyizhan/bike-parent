package com.tiamaes.bike.connector.listener;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.handler.annotation.Header;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.tiamaes.bike.common.bean.connector.command.Command;
import com.tiamaes.bike.connector.service.CommandServiceInterface;

@Component
public class Listener {
	private static Logger logger = LogManager.getLogger(Listener.class);
	
	@Autowired
	private ObjectMapper objectMapper;

	@Resource
	private CommandServiceInterface commandService;
	
	@KafkaListener(id = "listen1", topics = "com.tiamaes.bike.common.bean.connector.command.Command", containerFactory = "kafkaStringListenerContainerFactory")
	public void listen1(@Payload String context,
			@Header(KafkaHeaders.RECEIVED_TOPIC) String topic,
			@Header(KafkaHeaders.RECEIVED_MESSAGE_KEY) String key) {
		try {
			Command command = (Command)objectMapper.readValue(context, Object.class);
			if(command != null){
				if(logger.isDebugEnabled()){
					logger.debug(context);
				}
				commandService.sendCommand(command);
			}
		} catch (Exception e) {
			logger.error(e.getMessage());
		}
	}
}
