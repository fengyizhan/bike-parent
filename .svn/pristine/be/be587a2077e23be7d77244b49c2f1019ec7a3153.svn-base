package com.tiamaes.bike.reporter.integrated.vehicle.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.tiamaes.bike.common.bean.system.PointVector.Center;
import com.tiamaes.bike.common.bean.integrated.LocationRecord;
import com.tiamaes.bike.common.utils.GPSUtils;
import com.tiamaes.bike.reporter.integrated.vehicle.service.VehicleLocationServiceInterface;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/location")
@Api(tags = {"vehicleLocation"}, description = "车辆定位记录查询")
public class VehicleLocationController {
	
	@SuppressWarnings("unused")
	private static Logger logger = LogManager.getLogger(VehicleLocationController.class);
	
	@Resource
	private VehicleLocationServiceInterface vehicleLocationService;
	
	/**
	 * 获取某一时间段内车辆的定位信息
	 * @param location
	 * @return
	 */
	@RequestMapping(value = "/locations", method = RequestMethod.POST,produces = {"application/json"})
	@ApiOperation(value = "某段时间内车辆的定位信息", notes = "获取某一时间段内车辆的定位信息")
	@ApiImplicitParam(name = "locationRecord", value = "车辆定位记录实体", required = true, dataType = "LocationRecord")
	public @ResponseBody List<Center> getLocations(@RequestBody LocationRecord locationRecord) {
		List<Center> list = vehicleLocationService.getLocationByTime(locationRecord);
		List<Center> result = new ArrayList<Center>();
		if(list != null && list.size() > 0){
			for(Center center : list){
				double[] bd09 = GPSUtils.fromWGS84ToBD09(center.getLat(), center.getLng());
				center.setLat(bd09[0]);
				center.setLng(bd09[1]);
				result.add(center);
			}
		}
		return result;
	}
	
	/**
	 * 获取车辆历史定位信息
	 * @param locationRecord
	 * @return
	 */
	@RequestMapping(value = "/historyPosition", method = RequestMethod.POST)
	@ApiOperation(value = "车辆的历史定位信息", notes = "获取车辆历史定位信息")
	@ApiImplicitParam(name = "locationRecord", value = "车辆定位记录实体", required = true, dataType = "LocationRecord")
	public List<LocationRecord> getListOfHistoryPositionInfo(@RequestBody LocationRecord locationRecord) {
		return vehicleLocationService.getListOfHistoryPositionInfo(locationRecord);
	}
	
	/**
	 * 获取车辆实时定位信息
	 * @param locationRecord
	 * @return
	 */
	@RequestMapping(value = "/realtimePosition", method = RequestMethod.POST)
	@ApiOperation(value = "车辆的实时定位信息", notes = "获取车辆实时定位信息")
	@ApiImplicitParam(name = "locationRecord", value = "车辆定位记录实体", required = true, dataType = "LocationRecord")
	public List<LocationRecord> getListOfRealtimePositionInfo(@RequestBody LocationRecord locationRecord) {
		return vehicleLocationService.getListOfRealtimePositionInfo(locationRecord);
	}
}
