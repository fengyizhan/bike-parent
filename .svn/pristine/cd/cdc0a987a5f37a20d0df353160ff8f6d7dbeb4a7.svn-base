package com.tiamaes.bike.connector.protocol.handler;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.tiamaes.bike.common.bean.connector.ResponseInfo;
import com.tiamaes.bike.common.bean.connector.ResponseInfo.RegisterResultType0001;
import com.tiamaes.bike.common.bean.connector.ResponseInfo.ResponseState;
import com.tiamaes.bike.common.bean.message.Message;
import com.tiamaes.bike.common.utils.UUIDGenerator;
import com.tiamaes.bike.connector.service.HandlerServiceInterface;

import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.Channel;

/**
 * 终端通用应答0x0001
 * @author lsl
 *
 */
@Component
public class Protocol0001Handler extends ProtocolHandler {
	
	@Autowired
	private HandlerServiceInterface handlerService;
	
	@Override
	public Message execute(Channel channel, Message request) throws JsonProcessingException {
		ResponseInfo responseInfo = decodeBody(request);
		handlerService.handle0001(responseInfo);
		return null;
	}
	
	
	public static ResponseInfo decodeBody(Message request){
		String simNo = request.getHeader().getSimNo();
		// 如果是终端通用应答，就更新数据库的指令状态为已应答
		byte[] bytebody=request.getBody();
		CompositeByteBuf buffer = Unpooled.compositeBuffer();
		buffer.writeBytes(bytebody);
		//应答消息流水号
		int messageSerialNo = buffer.readUnsignedShort();
		//应答消息ID
		int messageId = buffer.readUnsignedShort();
		//应答结果，0：成功/确认；1：失败；2：消息有误；3：不支持
		int responseResult = buffer.readByte();
		ResponseInfo responseInfo = new ResponseInfo();
		responseInfo.setId(UUIDGenerator.getUUID());
		responseInfo.setSimNo(simNo);
		responseInfo.setMessageId(messageId);
		responseInfo.setMessageSeqNo(messageSerialNo);
		responseInfo.setResponseTime(new Date());
		responseInfo.setResponseContent(request.toString());
		if(responseResult==0){
			responseInfo.setResponseState(ResponseState.SUCCESS);
		}else{
			responseInfo.setResponseState(ResponseState.FAILD);
		}
		responseInfo.setResponse(RegisterResultType0001.valueOf(responseResult).getName());
		responseInfo.setStateCode(String.valueOf(responseResult));
		
		return responseInfo;
	}

}
