package com.tiamaes.bike.connector.protocol.handler;

import org.apache.commons.codec.DecoderException;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.tiamaes.bike.common.bean.connector.Upstream;
import com.tiamaes.bike.common.bean.message.Message;
import com.tiamaes.bike.common.bean.message.Message8001;

import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.Channel;

/**
 * 数据上行透传
 * @author waibao001
 *
 */
@Component
public class Protocol0900Handler extends ProtocolHandler {
	
	@Override
	public Message execute(Channel channel, Message request) throws JsonProcessingException, DecoderException {
		String simNo = request.getHeader().getSimNo();
		Message8001 response = new Message8001(simNo);
		response.setResponseBody(request.getHeader(), 0);
		return response;
	}
	
	public static Upstream decodeBody(Message request){
		Upstream upstream= new Upstream();
		byte[] bytebody=request.getBody();
		CompositeByteBuf buffer = Unpooled.compositeBuffer();
		buffer.writeBytes(bytebody);
		//透传消息类型
		int messageType = buffer.readUnsignedByte();
		//透传消息内容
		byte[] messageContent = new byte[buffer.readableBytes()];
		buffer.readBytes(messageContent);
		
		upstream.setMessageType(messageType);
		upstream.setMessageContent(messageContent);
		
		return upstream;
	}
}
